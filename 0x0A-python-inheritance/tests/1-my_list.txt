Test cases for '1-my_list.py'
=============================
Import module
>>> MyList = __import__('1-my_list').MyList

Test cases:
-----------
# Test case 1: Empty list
>>> my_list = MyList()
>>> print(my_list)
[]
>>> my_list.print_sorted()
[]
>>> print(my_list)
[]

# Test case 2: Float numbers
>>> my_list = MyList()
>>> my_list.append(1.2)
>>> my_list.append(3.2)
>>> my_list.append(2.2)
>>> print(my_list)
[1.2, 3.2, 2.2]
>>> my_list.print_sorted()
[1.2, 2.2, 3.2]
>>> print(my_list)
[1.2, 3.2, 2.2]

# Test case 3: Integer numbers
>>> my_list = MyList()
>>> my_list.append(2)
>>> my_list.append(1)
>>> my_list.append(3)
>>> print(my_list)
[2, 1, 3]
>>> my_list.print_sorted()
[1, 2, 3]
>>> print(my_list)
[2, 1, 3]

# Test case 4: Negative numbers
>>> my_list = MyList()
>>> my_list.append(-1)
>>> my_list.append(-3)
>>> my_list.append(-2)
>>> my_list.append(0)
>>> print(my_list)
[-1, -3, -2, 0]
>>> my_list.print_sorted()
[-3, -2, -1, 0]
>>> print(my_list)
[-1, -3, -2, 0]

# Test case 5: Duplicate numbers
>>> my_list = MyList()
>>> my_list.append(2)
>>> my_list.append(1)
>>> my_list.append(2)
>>> my_list.append(3)
>>> my_list.append(1)
>>> print(my_list)
[2, 1, 2, 3, 1]
>>> my_list.print_sorted()
[1, 1, 2, 2, 3]
>>> print(my_list)
[2, 1, 2, 3, 1]

# Test case 6: Large numbers
>>> my_list = MyList()
>>> my_list.append(1000)
>>> my_list.append(5000)
>>> my_list.append(2000)
>>> my_list.append(3000)
>>> print(my_list)
[1000, 5000, 2000, 3000]
>>> my_list.print_sorted()
[1000, 2000, 3000, 5000]
>>> print(my_list)
[1000, 5000, 2000, 3000]
